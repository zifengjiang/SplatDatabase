name: Update SplatDatabase

on:
  schedule:
    - cron: '*/5 * * * *'  # 每天运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  update-database:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Get latest version from Leanny
      id: get_latest_version
      run: |
        latest_version=$(curl -s https://raw.githubusercontent.com/Leanny/splat3/main/data/mush/latest)
        echo "latest_version=$latest_version" >> $GITHUB_ENV

    - name: Read local version
      id: read_local_version
      run: echo "::set-output name=local_version::$(cat version.txt)"

    - name: Compare versions
      id: compare_versions
      run: |
        if [ "${{ env.latest_version }}" != "${{ steps.read_local_version.outputs.local_version }}" ]; then
          echo "::set-output name=update_needed::true"
        else
          echo "::set-output name=update_needed::false"
        fi

    - name: Update files if needed
      if: steps.compare_versions.outputs.update_needed == 'true'
      run: |
        git clone https://github.com/Leanny/splat3.git
        cp -r splat3/data/mush/${{ env.latest_version }}/BadgeInfo.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/CoopEnemyInfo.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/CoopSceneInfo.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/CoopSkinInfo.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/GearInfoClothes.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/GearInfoHead.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/GearInfoShoes.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/NamePlateBgInfo.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/VersusSceneInfo.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/WeaponInfoMain.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/GearInfoClothes.json Sources/SplatDatabase/Resources/
        cp -r splat3/data/mush/${{ env.latest_version }}/WeaponInfoSub.json Sources/SplatDatabase/Resources/
        # 更新本地版本文件
        echo "${{ env.latest_version }}" > version.txt

    - name: Update SplatDatabase.swift
      if: steps.compare_versions.outputs.update_needed == 'true'
      run: |
        sed -i '/return migrator/i \
        migrator.registerMigration("insertI18nForVersion${{ env.latest_version }}") { db in\n\
            try self.updateI18n(db: db)\n\
        }' Sources/SplatDatabase/SplatDatabase.swift

    - name: Commit and push changes
      if: steps.compare_versions.outputs.update_needed == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Update to version ${{ env.latest_version }}"
        git push origin main
